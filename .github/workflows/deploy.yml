name: Deploy Flask App with Terraform + Ansible

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - 'ansible/**'
      - '.github/workflows/deploy.yml'

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      AWS_REGION: us-east-1
      ANSIBLE_FORCE_COLOR: 1  # Enable colored Ansible output

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6
          terraform_wrapper: false

      - name: Terraform Init and Validate
        working-directory: ./infra
        run: |
          terraform init -input=false
          terraform validate

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -input=false -auto-approve tfplan

      - name: Get EC2 IP
        id: ec2ip
        working-directory: ./infra
        run: |
          ip=$(terraform output -raw ec2_public_ip)
          echo "ip=${ip}" >> "$GITHUB_OUTPUT"
          echo "::set-output name=ip::$ip"  # Backwards compatibility

      - name: Setup Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible sshpass

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ steps.ec2ip.outputs.ip }} >> ~/.ssh/known_hosts

      - name: Create Dynamic Inventory
        run: |
          cat > ansible/inventory.ini <<EOF
          [ec2]
          ${{ steps.ec2ip.outputs.ip }}

          [ec2:vars]
          ansible_user=${{ secrets.EC2_SSH_USER }}
          ansible_ssh_private_key_file=~/.ssh/id_rsa
          ansible_python_interpreter=/usr/bin/python3
          EOF

      - name: Ping Test
        run: ansible all -i ansible/inventory.ini -m ping

      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/site.yml -vv
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"