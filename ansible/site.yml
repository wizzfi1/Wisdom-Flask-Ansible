---
- name: Deploy Dockerized Flask app
  hosts: ec2
  become: true
  vars:
    container_name: "wisdom"
    container_port: 5000
    docker_image: "wizfi/wisdom-flask"
    docker_restart_policy: "unless-stopped"

  tasks:
    - name: Update apt cache and install prerequisites
      apt:
        update_cache: yes
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - docker.io
        state: present

    - name: Add Docker GPG key (for Docker CE)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Add Docker repository (for Docker CE)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Install Docker CE (instead of docker.io)
      apt:
        name: docker-ce
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Ensure Docker is running and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Pull Docker image
      docker_image:
        name: "{{ docker_image }}"
        source: pull
        force_source: yes

    - name: Ensure old container is stopped and removed
      docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: yes

    - name: Run Flask container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_image }}"
        state: started
        restart_policy: "{{ docker_restart_policy }}"
        ports:
          - "{{ container_port }}:{{ container_port }}"
        env:
          FLASK_ENV: "production"
          # Add other environment variables as needed
        volumes:
          - "/var/log/wisdom:/app/logs"  # Example volume mount